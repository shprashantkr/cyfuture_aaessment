# -*- coding: utf-8 -*-
"""diffuser_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lefZUAjB9g0c3KCvXQGxHNW-T6PuUSmF
"""

!pip install diffusers transformers accelerate safetensors --quiet
!pip install xformers --quiet

# You need a Hugging Face account to use the model.
from getpass import getpass

HF_TOKEN = getpass("Enter your Hugging Face access token: ")


import torch
from diffusers import StableDiffusionPipeline


device = "cuda" if torch.cuda.is_available() else "cpu"
print(f" Using device: {device.upper()}")


pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    use_auth_token=HF_TOKEN,
    torch_dtype=torch.float16 if device == "cuda" else torch.float32
).to(device)


prompt = "a coder sitting in a futuristic room with multiple screens"

print(" Generating image, please wait...")
image = pipe(prompt, num_inference_steps=100, guidance_scale=7.5).images[0]


output_path = "generated_image.png"
image.save(output_path)
print(f" Image saved as: {output_path}")


from IPython.display import Image, display
display(Image(filename=output_path))

from matplotlib import pyplot as plt


prompts = [
    "A cyberpunk street scene at night, neon lights, rain, reflective road",
    "A fantasy forest with glowing mushrooms, cinematic lighting",
    "A red color Hulk doing coding on his MacBook"
]



guidance_scales = [3.0, 6.0, 7.5, 10.0]
steps = [30, 50, 75, 100]


fig, axes = plt.subplots(
    nrows=len(prompts),
    ncols=len(guidance_scales),
    figsize=(16, 10)
)

for i, prompt in enumerate(prompts):
    for j, scale in enumerate(guidance_scales):
        print(f"  Generating: Prompt {i+1} | Scale: {scale} | Steps: {steps[j]}")


        image = pipe(
            prompt,
            num_inference_steps=steps[j],
            guidance_scale=scale,
            negative_prompt="blurry, low res, bad anatomy"
        ).images[0]


        axes[i][j].imshow(image)
        axes[i][j].axis('off')
        axes[i][j].set_title(f"Prompt {i+1}\nScale={scale}, Steps={steps[j]}", fontsize=8)


plt.tight_layout()
plt.show()

